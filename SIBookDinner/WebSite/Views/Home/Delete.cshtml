@model IEnumerable<Rule.Entities.staff>
@{
    ViewBag.Title = "删除";
    Layout = "~/Views/Shared/_LayoutForAdmin.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Delete</title>
</head>
<body>
    @Styles.Render("~/Content/bootstrap.css")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    <h2>删除个人信息</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        
        List<Rule.Entities.staff> staffList = ViewData["staffList"] as List<Rule.Entities.staff>;
        
        foreach (var item in staffList)
        {
            <div class="form-horizontal">
            <h4></h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(modelItem => item.ID)

            <div class="form-group">
                @Html.LabelFor(modelItem => item.StaffNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(modelItem => item.StaffNo, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(modelItem => item.StaffNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(modelItem => item.StaffName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(modelItem => item.StaffName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(modelItem => item.StaffName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(modelItem => item.StaffPower, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(modelItem => item.StaffPower, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(modelItem => item.StaffPower, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(modelItem => item.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(modelItem => item.Balance, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(modelItem => item.Balance, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(modelItem => item.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(modelItem => item.Remark, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(modelItem => item.Remark, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="删除" class="btn btn-default" />
                </div>
            </div>
        </div>
        }
}
</body>
</html>

